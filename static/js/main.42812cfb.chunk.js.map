{"version":3,"sources":["useBookSearch.js","App.js","index.js"],"names":["useBookSearch","query","pageNumber","useState","loading","setLoading","error","setError","books","setBooks","hasMore","sethasMore","useEffect","cancel","axios","method","url","params","q","page","cancelToken","CancelToken","c","then","res","console","log","data","prevBook","Set","docs","map","b","title","length","catch","e","isCancel","App","setPageNumber","setQuery","observer","useRef","lastBookElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","className","type","value","onChange","target","book","index","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PA8CeA,MA3Cf,SAAuBC,EAAOC,GAC5B,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,MAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAoCA,OAlCAC,qBAAU,WACRH,EAAS,MACR,CAACR,IAEJW,qBAAU,WAGR,IAAIC,EAwBJ,OA1BAR,GAAW,GACXE,GAAS,GAETO,IAAM,CACJC,OAAQ,MACRC,IAAK,sCACLC,OAAQ,CACNC,EAAGjB,EACHkB,KAAMjB,GAERkB,YAAa,IAAIN,IAAMO,aAAY,SAACC,GAAD,OAAQT,EAASS,OAEnDC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAIG,MAChBlB,GAAS,SAACmB,GACR,OAAO,YACF,IAAIC,IAAJ,sBAAYD,GAAZ,YAAyBJ,EAAIG,KAAKG,KAAKC,KAAI,SAACC,GAAD,OAAOA,EAAEC,gBAG3DtB,EAAWa,EAAIG,KAAKG,KAAKI,OAAS,GAClC7B,GAAW,MAEZ8B,OAAM,SAACC,GACFtB,IAAMuB,SAASD,IACnB7B,EAAS6B,MAEN,kBAAMvB,OACZ,CAACZ,EAAOC,IAEJ,CAAEE,UAASE,QAAOE,QAAOE,Y,OCYnB4B,MAnDf,WACE,MAAoCnC,mBAAS,GAA7C,mBAAOD,EAAP,KAAmBqC,EAAnB,KACA,EAA0BpC,mBAAS,IAAnC,mBAAOF,EAAP,KAAcuC,EAAd,KACA,EAA2CxC,EAAcC,EAAOC,GAAxDM,EAAR,EAAQA,MAAOF,EAAf,EAAeA,MAAOF,EAAtB,EAAsBA,QAASM,EAA/B,EAA+BA,QAEzB+B,EAAWC,mBACXC,EAAqBC,uBACzB,SAACC,GACKzC,IACAqC,EAASK,SAASL,EAASK,QAAQC,aACvCN,EAASK,QAAU,IAAIE,sBAAqB,SAACC,GACvCA,EAAQ,GAAGC,gBAAkBxC,GAC/B6B,GAAc,SAACY,GAAD,OAAoBA,EAAiB,QAGnDN,GAAMJ,EAASK,QAAQM,QAAQP,MAErC,CAACzC,EAASM,IAUZ,OAFAE,qBAAU,cAAU,CAACX,IAGnB,sBAAKoD,UAAU,MAAf,UACE,uBAAOC,KAAK,OAAOC,MAAOtD,EAAOuD,SATrC,SAAwBpB,GACtBG,EAAc,GACdC,EAASJ,EAAEqB,OAAOF,UAQf/C,EAAMuB,KAAI,SAAC2B,EAAMC,GAChB,OAAInD,EAAM0B,SAAWyB,EAAQ,EAEzB,qBAAKC,IAAKjB,EAA+BU,UAAU,YAAnD,SACGK,GADgCA,GAMnC,qBAAgBL,UAAU,YAA1B,SACGK,GADOA,MAMfpD,GAAS,qBAAK+C,UAAU,QAAf,mBACTjD,GAAW,qBAAKiD,UAAU,UAAf,4BC7ClBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.42812cfb.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction useBookSearch(query, pageNumber) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [books, setBooks] = useState([]);\r\n  const [hasMore, sethasMore] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setBooks([]);\r\n  }, [query]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(false);\r\n    let cancel;\r\n    axios({\r\n      method: 'GET',\r\n      url: 'https://openlibrary.org/search.json',\r\n      params: {\r\n        q: query,\r\n        page: pageNumber\r\n      },\r\n      cancelToken: new axios.CancelToken((c) => (cancel = c))\r\n    })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setBooks((prevBook) => {\r\n          return [\r\n            ...new Set([...prevBook, ...res.data.docs.map((b) => b.title)])\r\n          ];\r\n        });\r\n        sethasMore(res.data.docs.length > 0);\r\n        setLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        if (axios.isCancel(e)) return;\r\n        setError(e);\r\n      });\r\n    return () => cancel();\r\n  }, [query, pageNumber]);\r\n\r\n  return { loading, error, books, hasMore };\r\n}\r\n\r\nexport default useBookSearch;\r\n","import './App.css';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport useBookSearch from './useBookSearch';\n\nfunction App() {\n  const [pageNumber, setPageNumber] = useState(1);\n  const [query, setQuery] = useState('');\n  const { books, error, loading, hasMore } = useBookSearch(query, pageNumber);\n\n  const observer = useRef();\n  const lastBookElementRef = useCallback(\n    (node) => {\n      if (loading) return;\n      if (observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting && hasMore) {\n          setPageNumber((prevPageNumber) => prevPageNumber + 1);\n        }\n      });\n      if (node) observer.current.observe(node);\n    },\n    [loading, hasMore]\n  );\n\n  function handleOnChange(e) {\n    setPageNumber(1);\n    setQuery(e.target.value);\n  }\n\n  useEffect(() => {}, [query]);\n\n  return (\n    <div className=\"app\">\n      <input type=\"text\" value={query} onChange={handleOnChange}></input>\n      {books.map((book, index) => {\n        if (books.length === index + 1) {\n          return (\n            <div ref={lastBookElementRef} key={book} className=\"book-item\">\n              {book}\n            </div>\n          );\n        } else {\n          return (\n            <div key={book} className=\"book-item\">\n              {book}\n            </div>\n          );\n        }\n      })}\n      {error && <div className=\"error\">Error</div>}\n      {loading && <div className=\"loading\">...Loading</div>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}